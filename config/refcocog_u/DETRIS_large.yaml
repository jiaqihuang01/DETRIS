DATA:
  dataset: refcocog_u
  train_lmdb: datasets/lmdb/refcocog_u/train.lmdb
  train_split: train
  val_lmdb: datasets/lmdb/refcocog_u/val.lmdb
  val_split: val
  mask_root: datasets/masks/refcocog_u
TRAIN:
  # Base Arch
  visual_adapter_dim: 128
  visual_adapter_layer: [2, 6, 10, 14, 18, 22]
  txt_adapter_dim: 64
  txtual_adapter_layer: [1,3,5,7,9,11]
  # Base Arch
  clip_pretrain: pretrain/ViT-B-16.pt
  dino_pretrain: pretrain/dinov2_vitl14_reg4_pretrain.pth
  dino_layers: 24
  output_dinov2: [8, 16]
  model_name: CLIP-b-16
  dino_name: dinov2-large
  input_size: 448
  word_len: 22
  word_dim: 512
  ladder_dim: 64
  nhead: 8
  multi_stage: 3
  stride: [1, 1, 1]
  vis_dim: 512
  fpn_in: [1024, 1024, 1024]
  fpn_out: [256, 512, 1024]
  sync_bn: True
 
  # Decoder
  num_layers: 3
  num_head: 8
  dim_ffn: 512
  dropout: 0.1
  intermediate: False
  # Training Setting
  workers: 32  # data loader workers
  workers_val: 16
  epochs: 50
  milestones: [35]
  start_epoch: 0
  batch_size: 32  # batch size for training
  batch_size_val: 32  # batch size for validation during training, memory and speed tradeoff
  base_lr: 0.0001
  lr_decay: 0.1
  lr_multi: 1
  weight_decay: 0.
  max_norm: 0.
  manual_seed: 0
  print_freq: 100
  # Resume & Save
  exp_name: DETRIS_large
  output_folder: exp/refcocog_u
  save_freq: 1
  weight:  # path to initial weight (default: none)
  resume:  # path to latest checkpoint (default: none)
  evaluate: True  # evaluate on validation set, extra gpu memory needed and small batch_size_val is recommend

TEST:
  test_split: val-test
  test_lmdb: datasets/lmdb/refcoco/val.lmdb
  visualize: False
